<%- include("post.ejs", {user:""}) %>
<h2>Title : <%= title %> </h2>
<h3>Body :  <%= body %> </h3>


<script src="https://cdn.bluebillywig.com/apps/player/20220419.113245/player.js"></script>
<div id="myPlayerDiv"></div>

<div id="mydiv" data-test=<%= mediaID %>></div>


<script>
var mediaID = document.getElementById('mydiv').dataset.test;
var videoURL = `https://demo.bbvms.com/p/default/c/${mediaID}.json`;
var userID = localStorage.getItem('user_id');
var xhr = new XMLHttpRequest();

// Embed the player in the element "myPlayerDiv". Other playout settings (like width, height, autoPlay) can also be overruled by including them in the object passed as a second parameter:
var myPlayer = new bluebillywig.Player( videoURL, {
        target : document.getElementById("myPlayerDiv"),
        autoPlay : "false",
        width: "90%",
        height: "90%"
});
// call the play method on the newly created player:
myPlayer.play();

// call method with player ended playing video;
myPlayer.on('ended', onEndedPlay);
myPlayer.on('play', function(){
  totalTime = myPlayer.getDuration();
  newVideo = true;
});
myPlayer.on('timeupdate', onVideoPlay);




// Function to send post at 40% of video
function onVideoPlay( ){
  currentTime = myPlayer.getCurrentTime();
  compareTime = totalTime * 0.4 ; 
  var url = "https://jsonplaceholder.typicode.com/todos";

  if(totalTime != 0 && newVideo == true) {
    if(currentTime >= compareTime) {
      newVideo = false;
      xhr.open("POST", url, true);
      xhr.setRequestHeader('Content-Type', 'application/json');
      xhr.send(JSON.stringify({
        userId: userID,
        videoId: mediaID,
        title: "40% Video Watched",
        completed: "True"
      }));

      xhr.onload = function() {
          var data = JSON.parse(this.responseText);
          console.log(data);
      };
    }
    } 
  }


// Function to send post at end of video
function onEndedPlay() {
  var url = "https://jsonplaceholder.typicode.com/todos";
  xhr.open("POST", url, true);
  xhr.setRequestHeader('Content-Type', 'application/json');
  xhr.send(JSON.stringify({
    userId: userID,
    videoId: mediaID,
    title: "Full Video Watched",
    completed: "True"
 }));

  xhr.onload = function() {
      var data = JSON.parse(this.responseText);
      console.log(data);
  };
}

</script>


